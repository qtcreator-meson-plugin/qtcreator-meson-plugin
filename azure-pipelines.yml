# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- script: |
    set -x

    QTC_VERSION=4.11
    QTC_FULL=4.11.2
    QTC_INTERNAL=4.11.2

    sudo apt-get update
    sudo apt-get install -y --no-install-recommends p7zip libgl1-mesa-dev libsm6 libice6 libxext6 libxrender1 libfontconfig1 libdbus-1-3

    wget https://download.qt.io/official_releases/qt/5.12/5.12.1/qt-opensource-linux-x64-5.12.1.run
    wget https://download.qt.io/official_releases/qtcreator/$QTC_VERSION/$QTC_FULL/installer_source/linux_gcc_64_rhel72/qtcreator.7z
    wget https://download.qt.io/official_releases/qtcreator/$QTC_VERSION/$QTC_FULL/qt-creator-opensource-src-$QTC_FULL.tar.xz

    QT_CI_PACKAGES=qt.qt5.5121.gcc_64 ./ci/extract-qt-installer.sh ./qt-opensource-linux-x64-5.12.1.run "$HOME/qt-bin"
    tar xaf qt-creator-opensource-src-$QTC_FULL.tar.xz
    7zr -oqtcreator-bin x qtcreator.7z

    mkdir build
    cd build
    "$HOME/qt-bin/5.12.1/gcc_64/bin/qmake" ../mesonprojectmanager.pro IDE_SOURCE_TREE=$(realpath ../qt-creator-opensource-src-$QTC_FULL/) IDE_BUILD_TREE=$(realpath ../qtcreator-bin)
    make -j8
    cp "$HOME/.local/share/data/QtProject/qtcreator/plugins/$QTC_INTERNAL/libMesonProjectManager.so" '$(Build.ArtifactStagingDirectory)'
  displayName: 'Build plugin'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: PluginLinux
